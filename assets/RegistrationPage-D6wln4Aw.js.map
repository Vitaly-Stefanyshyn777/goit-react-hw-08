{"version":3,"file":"RegistrationPage-D6wln4Aw.js","sources":["../../src/components/RegistrationForm/RegistrationForm.jsx","../../src/pages/RegistrationPage/RegistrationPage.jsx"],"sourcesContent":["import { Field, Form, Formik, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport s from \"./RegistrationForm.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { register } from \"../../redux/auth/operations\";\nimport { useNavigate } from \"react-router-dom\";\nimport { selectUserAuthStatus } from \"../../redux/auth/selectors\";\nimport toast from \"react-hot-toast\";\n\nconst validationSchema = Yup.object({\n  name: Yup.string()\n    .min(3, \"Name must be at least 3 characters\")\n    .required(\"Name is required\"),\n  email: Yup.string()\n    .email(\"Invalid email format\")\n    .required(\"Email is required\"),\n  password: Yup.string()\n    .min(6, \"Password must be at least 6 characters\")\n    .required(\"Password is required\"),\n});\n\nconst RegistrationForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const isUserAuthenticated = useSelector(selectUserAuthStatus);\n\n  const handleSubmit = (values, { resetForm, setSubmitting }) => {\n    dispatch(register(values))\n      .unwrap()\n      .then((res) => {\n        toast.success(`Welcome ${res?.user?.name || \"User\"}!`);\n        resetForm();\n        navigate(\"/contacts\");\n      })\n      .catch((error) => {\n        toast.error(\n          error.response?.data?.message || \"Something went wrong, try again\"\n        );\n      })\n      .finally(() => {\n        setSubmitting(false);\n      });\n  };\n\n  if (isUserAuthenticated) {\n    navigate(\"/contacts\");\n  }\n\n  return (\n    <div className={s.wrapper}>\n      <h2>Register</h2>\n      <Formik\n        initialValues={{ name: \"\", email: \"\", password: \"\" }}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ isSubmitting }) => (\n          <Form className={s.form}>\n            <Field className={s.field} name=\"name\" placeholder=\"Enter name\" />\n            <ErrorMessage name=\"name\" component=\"div\" className={s.error} />\n            <Field className={s.field} name=\"email\" placeholder=\"Enter email\" />\n            <ErrorMessage name=\"email\" component=\"div\" className={s.error} />\n            <Field\n              className={s.field}\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Enter pass\"\n            />\n            <ErrorMessage name=\"password\" component=\"div\" className={s.error} />\n            <button type=\"submit\" disabled={isSubmitting}>\n              {isSubmitting ? \"Submitting...\" : \"Submit\"}\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default RegistrationForm;\n","import DocumentTitle from \"../../components/DocumentTitle/DocumentTitle\";\nimport RegistrationForm from \"../../components/RegistrationForm/RegistrationForm\";\nimport { Box, Container } from \"@mui/material\";\n\nconst RegistrationPage = () => {\n  return (\n    <>\n      <DocumentTitle>Registration</DocumentTitle>\n      <Container maxWidth=\"sm\">\n        <Box\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            minHeight: \"100vh\",\n            textAlign: \"center\",\n          }}\n        >\n          <RegistrationForm />\n        </Box>\n      </Container>\n    </>\n  );\n};\n\nexport default RegistrationPage;\n"],"names":["validationSchema","Yup.object","Yup.string","RegistrationForm","dispatch","useDispatch","navigate","useNavigate","isUserAuthenticated","useSelector","selectUserAuthStatus","handleSubmit","values","resetForm","setSubmitting","register","res","toast","_a","error","_b","jsxs","jsx","Formik","isSubmitting","Form","Field","ErrorMessage","RegistrationPage","Fragment","DocumentTitle","Container","Box"],"mappings":"6aASMA,EAAmBC,EAAW,CAClC,KAAMC,EAAW,EACd,IAAI,EAAG,oCAAoC,EAC3C,SAAS,kBAAkB,EAC9B,MAAOA,EAAW,EACf,MAAM,sBAAsB,EAC5B,SAAS,mBAAmB,EAC/B,SAAUA,EAAW,EAClB,IAAI,EAAG,wCAAwC,EAC/C,SAAS,sBAAsB,CACpC,CAAC,EAEKC,EAAmB,IAAM,CAC7B,MAAMC,EAAWC,EAAY,EACvBC,EAAWC,EAAY,EACvBC,EAAsBC,EAAYC,CAAoB,EAEtDC,EAAe,CAACC,EAAQ,CAAE,UAAAC,EAAW,cAAAC,KAAoB,CACpDV,EAAAW,EAASH,CAAM,CAAC,EACtB,SACA,KAAMI,GAAQ,OACbC,EAAM,QAAQ,aAAWC,EAAAF,GAAA,YAAAA,EAAK,OAAL,YAAAE,EAAW,OAAQ,MAAM,GAAG,EAC3CL,EAAA,EACVP,EAAS,WAAW,CAAA,CACrB,EACA,MAAOa,GAAU,SACVF,EAAA,QACJG,GAAAF,EAAAC,EAAM,WAAN,YAAAD,EAAgB,OAAhB,YAAAE,EAAsB,UAAW,iCACnC,CAAA,CACD,EACA,QAAQ,IAAM,CACbN,EAAc,EAAK,CAAA,CACpB,CACL,EAEA,OAAIN,GACFF,EAAS,WAAW,EAInBe,EAAAA,KAAA,MAAA,CAAI,UAAW,EAAE,QAChB,SAAA,CAAAC,EAAAA,IAAC,MAAG,SAAQ,UAAA,CAAA,EACZA,EAAA,IAACC,EAAA,CACC,cAAe,CAAE,KAAM,GAAI,MAAO,GAAI,SAAU,EAAG,EACnD,iBAAAvB,EACA,SAAUW,EAET,SAAA,CAAC,CAAE,aAAAa,CAAa,WACdC,EAAK,CAAA,UAAW,EAAE,KACjB,SAAA,CAAAH,MAACI,GAAM,UAAW,EAAE,MAAO,KAAK,OAAO,YAAY,aAAa,EAChEJ,MAACK,GAAa,KAAK,OAAO,UAAU,MAAM,UAAW,EAAE,MAAO,EAC9DL,MAACI,GAAM,UAAW,EAAE,MAAO,KAAK,QAAQ,YAAY,cAAc,EAClEJ,MAACK,GAAa,KAAK,QAAQ,UAAU,MAAM,UAAW,EAAE,MAAO,EAC/DL,EAAA,IAACI,EAAA,CACC,UAAW,EAAE,MACb,KAAK,WACL,KAAK,WACL,YAAY,YAAA,CACd,EACAJ,MAACK,GAAa,KAAK,WAAW,UAAU,MAAM,UAAW,EAAE,MAAO,EAClEL,EAAAA,IAAC,UAAO,KAAK,SAAS,SAAUE,EAC7B,SAAAA,EAAe,gBAAkB,QACpC,CAAA,CAAA,CACF,CAAA,CAAA,CAAA,CAEJ,EACF,CAEJ,ECzEMI,EAAmB,IAGnBP,EAAA,KAAAQ,WAAA,CAAA,SAAA,CAAAP,EAAAA,IAACQ,GAAc,SAAY,cAAA,CAAA,EAC3BR,EAAAA,IAACS,EAAU,CAAA,SAAS,KAClB,SAAAT,EAAA,IAACU,EAAA,CACC,GAAI,CACF,QAAS,OACT,cAAe,SACf,eAAgB,SAChB,WAAY,SACZ,UAAW,QACX,UAAW,QACb,EAEA,eAAC7B,EAAiB,CAAA,CAAA,CAAA,CAAA,CAEtB,CAAA,CAAA,EACF"}